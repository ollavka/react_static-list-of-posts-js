{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","App","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SAAoCD,EAAQK,WCfnCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCLrCC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eAED,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,WCDCU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKC,QAErCD,EAAKF,MACJ,cAAC,EAAD,CAAUA,KAAME,EAAKF,UAIzB,mBAAGV,UAAU,iBAAb,SAA+BY,EAAKR,OAElCQ,EAAKN,SAASQ,OAOd,cAAC,EAAD,CAAaR,SAAUM,EAAKN,WAN5B,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,qCCjBKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCCzBS,EAAM,WAUjB,IAAMD,EAAQE,EAAgBX,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAXmBS,EAWDP,EAAKO,OAVhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,MACzC,MAUPb,UAP2BgB,EAOGV,EAAKJ,GAN5Be,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,QADjE,IAA6BA,EALRH,KAerB,OACE,0BAASnB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCvBvBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d4229a5.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{comment.body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","export const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      {post.user && (\n        <UserInfo user={post.user} />\n      )}\n    </div>\n\n    <p className=\"PostInfo__body\">{post.body}</p>\n\n    {!post.comments.length ? (\n      <>\n        <hr />\n\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    ) : (\n      <CommentList comments={post.comments} />\n    )}\n\n  </div>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nexport const App = () => {\n  function getUserById(userId) {\n    return usersFromServer.find(user => user.id === userId)\n        || null;\n  }\n\n  function getCommentsByPostId(postId) {\n    return commentsFromServer.filter(comment => comment.postId === postId);\n  }\n\n  const posts = postsFromServer.map(post => ({\n    ...post,\n    user: getUserById(post.userId),\n    comments: getCommentsByPostId(post.id),\n  }));\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}